classType myCar.mySAD
blockdiagramSpecification Main {
	methodBody calc {
		outPin active
	{
			connection_1
		, connection_18, connection_42, connection_45
		, connection_51
		}
	}

	ifElse at  (281, 171) {
		inPin 
		connection_47 {
			bendpoints (90, 0)
		}
		ifControlFlowOutPin {
			connection_14
		, connection_10, connection_12
		}
		elseControlFlowOutPin {
			connection_5, connection_3
		}
		sequenceCall {
			inPin connection_1
		}
	}
	simpleIdentifier resources.CarMessages.power at  (751, 165) {
		label at (0, -1)
		inPin connection_11 {
			bendpoints (80, 0)
		}
		sequenceCall {
			inPin 
		connection_10 {
				bendpoints (410, 0)
			}
		}
	}
	
	simpleIdentifier resources.DriverMessages.power at  (111, 285) {
		label at (0, -1)
		outPin {
			connection_6
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.DriverMessages.brake at  (111, 335) {
		label at (0, -1)
		outPin {
			connection_4
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.brake at  (611, 335) {
		label at (0, -1)
		inPin connection_4
		sequenceCall {
			inPin connection_3 {
				bendpoints 
			(0, 110)
			}
		}
	}
	simpleIdentifier resources.CarMessages.power at  (691, 275) {
		label at (0, -1)
		inPin connection_6 {
			bendpoints 
		(540, 0)
		}
		sequenceCall {
			inPin connection_5 {
				bendpoints 
			(0, 50)
			}
		}
	}
complexIdentifier myControl_instance at (521, 141) size (14, 8) {
		label at (0, 1)
		methodCall myCar.myControl.calc {
			argumentPin vtarget at (left, 0) connection_9 {
				bendpoints (120, 0)
			}
			argumentPin v at (left, 1) connection_15 {
				bendpoints (110, 0)
			}
			sequenceCall at (-20, -44) {
				inPin connection_14 {
					bendpoints (10, 0), (10, -70)
				}
			}
		}
		elementCall (myCar.myControl.power) {
			returnPin at (right, 0) {
				connection_11
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.myControl.brake) {
			returnPin at (right, 1) {
				connection_13
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier vtarget at (351, 135) {
		label at (0, -1)
		outPin {
			connection_19
		, connection_9
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.brake at (821, 225) {
		label at (0, -1)
		inPin connection_13 {
			bendpoints (40, 0), (40, 70)
		}
		sequenceCall {
			inPin connection_12 {
				bendpoints (480, 0)
			}
		}
	}
	simpleIdentifier resources.CarMessages.v at (361, 195) {
		label at (0, -1)
		outPin {
			connection_15
		}
		sequenceCall {
			inPin
		}
	}
simpleIdentifier resources.DriverMessages.CCFState at (871, 405) {
		label at (0, -1)
		inPin connection_52 {
			bendpoints (0, 250)
		}
		sequenceCall {
			inPin 
		connection_51
		}
	}
	simpleIdentifier resources.DriverMessages.vTarget at (871, 455) {
		label at (0, -1)
		inPin connection_19 {
			bendpoints (80, 0), (80, 320)
		}
		sequenceCall {
			inPin connection_18
		}
	}
	literal Boolean "true" at (341, 583) size (49, 0) {
		outPin {
			connection_38
		}
	}
	conditionalSelect at (441, 551) {
		inPin connection_44 {
			bendpoints (0, -50), (-420, -50)
		}
		inPin CASE_CONDITION connection_50 {
			bendpoints (40, 0), (40, 390)
		}
		inPin connection_38
		outPin {
			connection_43
		}
	}
	simpleIdentifier resources.CarMessages.escActive at (811, 535) {
		label at (0, -1)
		inPin connection_43 {
			bendpoints (210, 0), (210, -40)
		}
		outPin {
			connection_44
		}
		sequenceCall {
			inPin connection_42
		}
	}
simpleIdentifier on at (141, 155) {
		label at (0, -1)
		inPin connection_46
		outPin {
			connection_50, connection_52, connection_47
		}
		sequenceCall {
			inPin connection_45
		}
	}
	simpleIdentifier resources.DriverMessages.CCFSwitch at (41, 155) {
		label at (0, -1)
		outPin {
			connection_46
		}
		sequenceCall {
			inPin
		}
	}
}