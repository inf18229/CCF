classType myCar.mySAD
blockdiagramSpecification Main {
	methodBody calc {
		outPin active
	{
			connection_55
		, connection_1, connection_61, connection_78
		, connection_81
		, connection_79
		, connection_86
		}
	}

	ifElse at   (451, 221) {
		inPin 
		connection_47 {
			bendpoints (90, 0)
		}
		ifControlFlowOutPin {
			connection_14
		, connection_76, connection_77
		}
		elseControlFlowOutPin {
			connection_74, connection_75
		}
		sequenceCall {
			inPin connection_1
		}
	}
	
	
	
	
	
	
complexIdentifier myControl_instance at  (901, 211) size (14, 8) {
		label at (0, 1)
		methodCall myCar.myControl.calc {
			argumentPin vtarget at (left, 0) connection_9 {
				bendpoints (120, 0)
			}
			argumentPin v at (left, 1) connection_15 {
				bendpoints 
			(100, 0)
			}
			sequenceCall at (-20, -44) {
				inPin connection_14 {
					bendpoints (10, 0), 
				(10, -50)
				}
			}
		}
		elementCall (myCar.myControl.power) {
			returnPin at (right, 0) {
				connection_11
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.myControl.brake) {
			returnPin at (right, 1) {
				connection_13
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier vtarget at  (731, 205) {
		label at (0, -1)
		outPin {
			connection_19
		, connection_9
		}
		sequenceCall {
			inPin
		}
	}
	
	

	
	literal Boolean "true" at   (711, 703) size (49, 0) {
		outPin {
			connection_38
		}
	}
	conditionalSelect at  (821, 621) {
		inPin connection_80
		inPin CASE_CONDITION connection_50 {
			bendpoints (40, 0), 
		(40, 410)
		}
		inPin connection_38 {
			bendpoints (0, -50)
		}
		outPin {
			connection_43
		}
	}
	
simpleIdentifier on at  (311, 205) {
		label at (0, -1)
		inPin connection_46
		outPin {
			connection_50, connection_52, connection_60
		, connection_47
		}
		sequenceCall {
			inPin connection_45
		{
				bendpoints (30, 0), (30, 50), (-120, 50)
			}
		}
	}
	
lessOrEqual at (301, 106) {
		inPin connection_53 {
			bendpoints (0, 40), (-60, 40), 
		(-60, -290)
		}
		inPin connection_54
		outPin {
			connection_56
		}
	}
	literal Numeric "0.0" at (211, 123) size (49, 0) {
		outPin {
			connection_54
		}
	}
	if at (371, 111) {
		inPin connection_56
		ifControlFlowOutPin {
			connection_45
		}
		sequenceCall {
			inPin connection_55
		}
	}
	greater at (461, 416) {
		inPin connection_57 {
			bendpoints (140, 0)
		}
		inPin connection_58
		outPin {
			connection_59
		}
	}
	literal Numeric "0.0" at (411, 433) size (49, 0) {
		outPin {
			connection_58
		}
	}
	and at (571, 436) {
		inPin connection_59 {
			bendpoints (40, 0), (40, 10)
		}
		inPin connection_60 {
			bendpoints (0, 80), (-160, 80), (-160, 250)
		}
		outPin {
			connection_62
		}
	}
	if at (651, 441) {
		inPin connection_62
		ifControlFlowOutPin {
			connection_63
		}
		sequenceCall {
			inPin connection_61
		}
	}
	literal Boolean "false" at  (641, 523) size (49, 0) {
		outPin {
			connection_64
		}
	}
	simpleIdentifier on at  (711, 525) {
		label at (0, -1)
		inPin connection_64
		outPin {
			connection_87
		} sequenceCall {
			inPin connection_63
		}
	}
simpleIdentifier power_in at (281, 345) {
		label at (0, -1)
		inPin outPin {
			connection_6
		}
		sequenceCall {
			inPin
		}
	}
	
	simpleIdentifier   brake_in at (271, 395) {
		label at (0, -1)
		inPin outPin {
			connection_53, connection_57, connection_4
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier power_out at (1071, 345) {
		label at (0, -1)
		inPin connection_6 outPin sequenceCall {
			inPin connection_74 {
				bendpoints (0, 70)
			}
		}
	}
	simpleIdentifier breake_out at (981, 395) {
		label at (0, -1)
		inPin connection_4 outPin sequenceCall {
			inPin connection_75 {
				bendpoints (500, 0)
			}
		}
	}
	simpleIdentifier power_out at (1181, 185) {
		label at (0, -1)
		inPin connection_11 {
			bendpoints 
		(0, -30)
		}
		
	outPin sequenceCall {
			inPin connection_76 {
				bendpoints (670, 0)
			}
		}
	}
	simpleIdentifier breake_out at (1201, 295) {
		label at (0, -1)
		inPin connection_13 {
			bendpoints (120, 0), 
		(120, 70)
		}
		
	outPin sequenceCall {
			inPin connection_77 {
				bendpoints (690, 0)
			}
		}
	}
	simpleIdentifier vtarget_out at (1251, 525) {
		label at (0, -1)
		inPin connection_19 {
			bendpoints (60, 0), 
		(60, 320)
		}
		
	outPin sequenceCall {
			inPin connection_78
		}
	}
	simpleIdentifier CCFState_out at  (1251, 455) {
		label at (0, -1)
		inPin connection_52 {
			bendpoints 
		
		(0, 80), (360, 80), 
		(360, 248)
		}
		outPin sequenceCall {
			inPin connection_79
		}
	}
	simpleIdentifier escActive_out at (1191, 645) {
		label at (0, -1)
		inPin connection_43 outPin sequenceCall {
			inPin connection_81
		}
	}
	simpleIdentifier escActive_in at  (601, 635) {
		label at (0, -1)
		inPin outPin {
			connection_80
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier CCFSwitch_in at  (131, 205) {
		label at (0, -1)
		inPin outPin {
			connection_46
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier CCFSwitch_out at (791, 555) {
		label at (0, -1)
		inPin connection_87 {
			bendpoints (30, 0)
		}
		outPin sequenceCall {
			inPin connection_86
		}
	}
	simpleIdentifier v at (741, 275) {
		label at (0, -1)
		inPin outPin {
			connection_15
		}
		sequenceCall {
			inPin
		}
	}
}