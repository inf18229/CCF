classType myCar.mySAD
blockdiagramSpecification Main {
	methodBody calc {
		outPin active
	{
			connection_61
		, connection_55, connection_1, connection_18
		, connection_42
		, connection_51
		}
	}

	ifElse at   (451, 221) {
		inPin 
		connection_47 {
			bendpoints (90, 0)
		}
		ifControlFlowOutPin {
			connection_14
		, connection_10, connection_12
		}
		elseControlFlowOutPin {
			connection_5, connection_3
		}
		sequenceCall {
			inPin connection_1
		}
	}
	simpleIdentifier resources.CarMessages.power at   (1131, 235) {
		label at (0, -1)
		inPin connection_11 {
			bendpoints (80, 0)
		}
		sequenceCall {
			inPin 
		connection_10 {
				bendpoints 
			(620, 0)
			}
		}
	}
	
	simpleIdentifier resources.DriverMessages.power at   (281, 335) {
		label at (0, -1)
		outPin {
			connection_6
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.DriverMessages.brake at   (281, 385) {
		label at (0, -1)
		outPin {
			connection_53
		, connection_57, connection_4
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.brake at   (991, 405) {
		label at (0, -1)
		inPin connection_4 {
			bendpoints (670, 0)
		}
		sequenceCall {
			inPin connection_3 {
				bendpoints 
			
			(0, 130)
			}
		}
	}
	simpleIdentifier resources.CarMessages.power at   (1071, 345) {
		label at (0, -1)
		inPin connection_6 {
			bendpoints 
		
		(750, 0)
		}
		sequenceCall {
			inPin connection_5 {
				bendpoints 
			
			(0, 70)
			}
		}
	}
complexIdentifier myControl_instance at  (901, 211) size (14, 8) {
		label at (0, 1)
		methodCall myCar.myControl.calc {
			argumentPin vtarget at (left, 0) connection_9 {
				bendpoints (120, 0)
			}
			argumentPin v at (left, 1) connection_15 {
				bendpoints (110, 0)
			}
			sequenceCall at (-20, -44) {
				inPin connection_14 {
					bendpoints (10, 0), 
				(10, -50)
				}
			}
		}
		elementCall (myCar.myControl.power) {
			returnPin at (right, 0) {
				connection_11
			}
			sequenceCall {
				inPin
			}
		}
		elementCall (myCar.myControl.brake) {
			returnPin at (right, 1) {
				connection_13
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier vtarget at  (731, 205) {
		label at (0, -1)
		outPin {
			connection_19
		, connection_9
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier resources.CarMessages.brake at  (1201, 295) {
		label at (0, -1)
		inPin connection_13 {
			bendpoints (40, 0), (40, 70)
		}
		sequenceCall {
			inPin connection_12 {
				bendpoints 
			(690, 0)
			}
		}
	}
	simpleIdentifier resources.CarMessages.v at  (741, 265) {
		label at (0, -1)
		outPin {
			connection_15
		}
		sequenceCall {
			inPin
		}
	}
simpleIdentifier resources.DriverMessages.CCFState at  (1251, 475) {
		label at (0, -1)
		inPin connection_52 {
			bendpoints 
		(0, 270)
		}
		sequenceCall {
			inPin 
		connection_51
		}
	}
	simpleIdentifier resources.DriverMessages.vTarget at  (1251, 525) {
		label at (0, -1)
		inPin connection_19 {
			bendpoints (80, 0), (80, 320)
		}
		sequenceCall {
			inPin connection_18
		}
	}
	literal Boolean "true" at  (721, 653) size (49, 0) {
		outPin {
			connection_38
		}
	}
	conditionalSelect at  (821, 621) {
		inPin connection_44 {
			bendpoints (0, -50), (-420, -50)
		}
		inPin CASE_CONDITION connection_50 {
			bendpoints (40, 0), 
		(40, 410)
		}
		inPin connection_38
		outPin {
			connection_43
		}
	}
	simpleIdentifier resources.CarMessages.escActive at  (1191, 605) {
		label at (0, -1)
		inPin connection_43 {
			bendpoints (210, 0), (210, -40)
		}
		outPin {
			connection_44
		}
		sequenceCall {
			inPin connection_42
		}
	}
simpleIdentifier on at  (311, 205) {
		label at (0, -1)
		inPin connection_46
		outPin {
			connection_50, connection_52, connection_60
		, connection_47
		}
		sequenceCall {
			inPin connection_45
		{
				bendpoints (30, 0), (30, 50), (-120, 50)
			}
		}
	}
	simpleIdentifier resources.DriverMessages.CCFSwitch at  (211, 205) {
		label at 
		(-60, 9)
		outPin {
			connection_46
		}
		sequenceCall {
			inPin
		}
	}
lessOrEqual at (301, 106) {
		inPin connection_53 {
			bendpoints (0, 110), (-230, 110), (-230, -280)
		}
		inPin connection_54
		outPin {
			connection_56
		}
	}
	literal Numeric "0.0" at (211, 123) size (49, 0) {
		outPin {
			connection_54
		}
	}
	if at (371, 111) {
		inPin connection_56
		ifControlFlowOutPin {
			connection_45
		}
		sequenceCall {
			inPin connection_55
		}
	}
	greater at (461, 416) {
		inPin connection_57 {
			bendpoints (120, 0), (120, 30)
		}
		inPin connection_58
		outPin {
			connection_59
		}
	}
	literal Numeric "0.0" at (411, 433) size (49, 0) {
		outPin {
			connection_58
		}
	}
	and at (571, 436) {
		inPin connection_59 {
			bendpoints (40, 0), (40, 10)
		}
		inPin connection_60 {
			bendpoints (0, 80), (-160, 80), (-160, 250)
		}
		outPin {
			connection_62
		}
	}
	if at (651, 441) {
		inPin connection_62
		ifControlFlowOutPin {
			connection_63
		}
		sequenceCall {
			inPin connection_61
		}
	}
	literal Boolean "false" at (641, 503) size (49, 0) {
		outPin {
			connection_64
		}
	}
	simpleIdentifier on at (711, 505) {
		label at (0, -1)
		inPin connection_64
		outPin sequenceCall {
			inPin connection_63
		}
	}
}